// +build !ignore_autogenerated

/*
Copyright 2017 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was autogenerated by deepcopy-gen. Do not edit it manually!

package runtime

import (
	conversion "k8s.io/kubernetes/pkg/conversion"
<<<<<<< HEAD
)

=======
	reflect "reflect"
)

// GetGeneratedDeepCopyFuncs returns the generated funcs, since we aren't registering them.
func GetGeneratedDeepCopyFuncs() []conversion.GeneratedDeepCopyFunc {
	return []conversion.GeneratedDeepCopyFunc{
		{Fn: DeepCopy_runtime_RawExtension, InType: reflect.TypeOf(&RawExtension{})},
		{Fn: DeepCopy_runtime_TypeMeta, InType: reflect.TypeOf(&TypeMeta{})},
		{Fn: DeepCopy_runtime_Unknown, InType: reflect.TypeOf(&Unknown{})},
	}
}

>>>>>>> e88b60f... wip
func DeepCopy_runtime_RawExtension(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*RawExtension)
		out := out.(*RawExtension)
<<<<<<< HEAD
=======
		*out = *in
>>>>>>> e88b60f... wip
		if in.Raw != nil {
			in, out := &in.Raw, &out.Raw
			*out = make([]byte, len(*in))
			copy(*out, *in)
<<<<<<< HEAD
		} else {
			out.Raw = nil
		}
		if in.Object == nil {
			out.Object = nil
		} else if newVal, err := c.DeepCopy(&in.Object); err != nil {
			return err
		} else {
			out.Object = *newVal.(*Object)
=======
		}
		// in.Object is kind 'Interface'
		if in.Object != nil {
			if newVal, err := c.DeepCopy(&in.Object); err != nil {
				return err
			} else {
				out.Object = *newVal.(*Object)
			}
>>>>>>> e88b60f... wip
		}
		return nil
	}
}

func DeepCopy_runtime_TypeMeta(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*TypeMeta)
		out := out.(*TypeMeta)
<<<<<<< HEAD
		out.APIVersion = in.APIVersion
		out.Kind = in.Kind
=======
		*out = *in
>>>>>>> e88b60f... wip
		return nil
	}
}

func DeepCopy_runtime_Unknown(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*Unknown)
		out := out.(*Unknown)
<<<<<<< HEAD
		out.TypeMeta = in.TypeMeta
=======
		*out = *in
>>>>>>> e88b60f... wip
		if in.Raw != nil {
			in, out := &in.Raw, &out.Raw
			*out = make([]byte, len(*in))
			copy(*out, *in)
<<<<<<< HEAD
		} else {
			out.Raw = nil
		}
		out.ContentEncoding = in.ContentEncoding
		out.ContentType = in.ContentType
=======
		}
>>>>>>> e88b60f... wip
		return nil
	}
}
